
public class QianTao {
	public static void main(String[] args){
//		for(int i = 0; i < 4; i++){//每一次循环都会执行大括号里面所有代码
//			System.out.println("大循环---" + i);
//			for(int j = 0; j < 2; j++){//大循环的次数乘以小循环的次数就是小循环的大括号里面执行代码的次数
//				System.out.println("大循环---" + i + "小循环---" + j);
//	//			for(){}
//			}
//		}
		
//		//1. 注意：在写嵌套循环的时候，要尽量保证外层循环的循环次小于内层的循环次数
//		for(int i = 1; i < 900; i++){//不建议这样写
//			for(int j = 0; j < 20; j++){
//				
//			}
//		}
//		
//		//建议这样写
//		for(int j = 0; j < 20; j++){//在编写代码的时候，如果上面的for循环与底下的for可以达到同样的逻辑效果时，要尽量使用下面这种
//			for(int i = 1; i < 900; i++){
//				
//			}
//		}
	
//		1 * 1 = 1
//		1 * 2 = 2 2 * 2 = 4
//		1 * 3 = 3 2 * 3 = 6 3 * 3 = 9
	
//		//题目1：九九乘法表
//		for(int i = 1; i <= 9; i++){
//			for(int j = 1; j <= i; j++){
//				System.out.print(i + " * " + j + " = " + (i * j) + "  ");//print不换行
//			}
//			System.out.println();//println换行
//		}

//		//题目2：100以内的所有质数
//		//7,循环1到7，用7与循环1到7之间的数分别取模，看能整除的次数，如果整除的次数只有2次，那可以判断是一个质数
//		//4,1、2、4，整除3次，不是质数
//		//1―100之间的所有质数(质数是一个大于1的自然数并且只能被1和本身整除)
//		for(int i = 1; i <= 100; i++){
//			int k = 0;//整除的次数,变量是在它所在的大括号范围之内生效
//			for(int j = 1; j <= i; j++){//循环1到i，用i与循环1到i之间的数分别取模
//				
//				if(i % j == 0){
//					k++;
//				}
//			}
//			
//			if(k == 2){//如果循环次数为2次，当前大循环的i值就是1个质数
//				System.out.println(i);
//			}
//		}
		
	}
}
